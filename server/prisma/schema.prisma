// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
}

model Customer {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(20)
  email        String        @unique @db.VarChar(25)
  password     String        @db.VarChar(100)
  role         Role          @default(CUSTOMER)
  phoneNumber  String        @unique @db.VarChar(15)
  product      Product[]
  shoppingCart ShoppingCart?
  profile      Profile?
  refreshToken String        @default("")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// unconfirm table
model Profile {
  id         Int      @id @default(autoincrement())
  bio        String   @db.VarChar(100)
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(25)
  brand        String         @db.VarChar(25)
  category     String         @db.VarChar(30)
  customer     Customer[]
  shoppingCart ShoppingCart[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model ShoppingCart {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
}

model Admin {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(20)
  email        String   @unique @db.VarChar(25)
  password     String   @db.VarChar(100)
  role         Role     @default(ADMIN)
  phoneNumber  String   @unique @db.VarChar(15)
  refreshToken String   @default("")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
